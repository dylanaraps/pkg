#!/bin/sh
# shellcheck disable=2086,2154,2123,2034 source=/dev/null
#
# mkpkg - package builder for kiss linux.

pkgfile_read() {
    [ -f pkgfile ] || die "pkgfile not found"

    # Unset PATH while checking pkgfile.
    old_PATH=$PATH
    PATH=

    . pkgfile || die "syntax error in pkgfile"

    [ -z "$name" ] &&    die "name not defined in pkgfile"
    [ -z "$version" ] && die "version not defined in pkgfile"

    type build >/dev/null || die "build() not found in pkgfile."
    PATH=$old_PATH
}

pkg_get() {
    mkdir -p build || die "couldn't create build dir."
    cd build >/dev/null || die "can't access build dir."

    for src; do
        [ -f "${src##*/}" ] && continue

        printf '%s\n' "=> downloading $src."
        wget "$src" || die "failed to download $src"
    done

    [ -z "$source" ] && return

    # Check if there are source files.
    _() { [ "$1" = "./*" ] && die "no source files found"; }; _ ./*
}

pkg_extract() {
    mkdir -p src pkg

    for pkg; do
        pkg_name=${pkg##*/}

        case $pkg in
			*.tar|*.tar.gz|*.tar.xz|*.tar.bz2|*.tar.lzma|\
            *.tar.lz|*.txz|*.tgz|*.tbz2|*.zip|*.rpm|*.7z)
                tar xavf "$pkg_name" -C src --strip-components 1 ||
                    die "couldn't extract $pkg_name"
            ;;
        esac
    done

    cd src >/dev/null || die "couldn't access extracted files"
}

pkg_build() {
    set -e
    BUILD=../pkg

    build
}

die() {
    printf '%s\n' "error: $1" >&2
    exit 1
}

main() {
    pkgfile_read
    pkg_get $source
    pkg_extract $source
    pkg_build
}

main "$@"
